# AWS playbook
---

- hosts: localhost
  connection: local
  gather_facts: False

  vars:
    key_name: eng119
    region: eu-west-1
    image: ami-07e5be90a4569bf1c # Ubuntu Server 18.04 LTS
    id: "eng110-anson-ansible-ec2"
    sec_group: "{{ id }}-sec"
    subnet_id: subnet-0429d69d55dfad9d2

  tasks:

    - name: Facts
      block:

      - name: Get instances facts
        ec2_instance_facts:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          region: "{{ region }}"
        register: result

      - name: Instances ID
        debug:
          msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }}"
        loop: "{{ result.instances }}"

      tags: always


    - name: Provisioning EC2 instances
      block:

      #- name: Upload public key to AWS
      #  ec2_key:
      #    name: "{{ key_name }}"
      #    key_material: "{{ lookup('file', '/home/vagrant/.ssh/eng119.pem') }}"
      #    region: "{{ region }}"
      #    aws_access_key: "{{ec2_access_key}}"
      #    aws_secret_key: "{{ec2_secret_key}}"

      - name: Create security group
        ec2_group:
          name: "{{ sec_group }}"
          description: "Sec group for app {{ id }}"
          # vpc_id: 12345
          region: "{{ region }}"
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          rules:
            - proto: tcp
              ports:
                - 22
              cidr_ip: 94.9.175.94/32
            #- proto: tcp
            #  ports:
            #    - 22
            #  cidr_ip: 0.0.0.0/0
        register: result_sec_group

      - name: Provision instance(s)
        ec2:
          aws_access_key: "{{ec2_access_key}}"
          aws_secret_key: "{{ec2_secret_key}}"
          assign_public_ip: true
          key_name: "{{ key_name }}"
          id: "{{ id }}"
          group_id: "{{ result_sec_group.group_id }}"
          image: "{{ image }}"
          vpc_subnet_id: "{{ subnet_id }}"
          instance_type: t2.micro
          region: "{{ region }}"
          wait: true
          count: 1
          instance_tags:
            Name: eng110-anson-ansible-ec2
          count_tag:
            Name: eng110-anson-ansible-ec2

      tags: ['never', 'create_ec2']
